name: nf-jdk build
# read more here
# https://help.github.com/en/articles/workflow-syntax-for-github-actions#on
on:
  push:
    branches:
      - '*'
      - '!refs/tags/.*'
    tags-ignore:
      - '*'  
  workflow_dispatch:
    branches:
      - master

permissions:
  id-token: write
  contents: write

jobs:
  build-jemalloc:
    uses: ./.github/workflows/build-jemalloc.yml

  build-mimalloc:
    uses: ./.github/workflows/build-mimalloc.yml

  build-base:
    name: Build base container
    runs-on: ubuntu-latest
    timeout-minutes: 20

    env:
      GITHUB_TOKEN: ${{ github.token }}

    steps:
    - name: Environment
      run: env | sort

    - name: Checkout
      uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Docker Login 
      uses: docker/login-action@v2
      with:
        registry: "cr.seqera.io"
        username: ${{ secrets.SEQERA_CR_USERNAME }}
        password: ${{ secrets.SEQERA_CR_PASSWORD }}

    - name: Build base image
      run: make build-base

  build-jemalloc-container:
    name: Build jemalloc container
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: build-jemalloc

    env:
      GITHUB_TOKEN: ${{ github.token }}

    steps:
    - name: Environment
      run: env | sort

    - name: Checkout
      uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Download jemalloc AMD64 artifacts
      uses: actions/download-artifact@v4
      with:
        name: jemalloc-amd64
        path: jemalloc-binaries/amd64/

    - name: Download jemalloc ARM64 artifacts
      uses: actions/download-artifact@v4
      with:
        name: jemalloc-arm64
        path: jemalloc-binaries/arm64/

    - name: Verify jemalloc binaries
      run: |
        echo "Checking jemalloc binaries..."
        ls -la jemalloc-binaries/
        ls -la jemalloc-binaries/amd64/ || echo "AMD64 directory empty or missing"
        ls -la jemalloc-binaries/arm64/ || echo "ARM64 directory empty or missing"
        echo "jemalloc AMD64 lib contents:"
        ls -la jemalloc-binaries/amd64/lib/ || echo "No AMD64 lib directory"
        echo "jemalloc ARM64 lib contents:"  
        ls -la jemalloc-binaries/arm64/lib/ || echo "No ARM64 lib directory"

    - name: Docker Login 
      uses: docker/login-action@v2
      with:
        registry: "cr.seqera.io"
        username: ${{ secrets.SEQERA_CR_USERNAME }}
        password: ${{ secrets.SEQERA_CR_PASSWORD }}

    - name: Build jemalloc image
      run: make build-jemalloc

  build-mimalloc-container:
    name: Build mimalloc container
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: build-mimalloc

    env:
      GITHUB_TOKEN: ${{ github.token }}

    steps:
    - name: Environment
      run: env | sort

    - name: Checkout
      uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Download mimalloc AMD64 artifacts
      uses: actions/download-artifact@v4
      with:
        name: mimalloc-amd64
        path: mimalloc-binaries/amd64/

    - name: Download mimalloc ARM64 artifacts
      uses: actions/download-artifact@v4
      with:
        name: mimalloc-arm64
        path: mimalloc-binaries/arm64/

    - name: Verify mimalloc binaries
      run: |
        echo "Checking mimalloc binaries..."
        ls -la mimalloc-binaries/
        ls -la mimalloc-binaries/amd64/ || echo "AMD64 directory empty or missing"
        ls -la mimalloc-binaries/arm64/ || echo "ARM64 directory empty or missing"
        echo "mimalloc AMD64 lib contents:"
        ls -la mimalloc-binaries/amd64/lib/ || echo "No AMD64 lib directory"
        echo "mimalloc ARM64 lib contents:"  
        ls -la mimalloc-binaries/arm64/lib/ || echo "No ARM64 lib directory"

    - name: Docker Login 
      uses: docker/login-action@v2
      with:
        registry: "cr.seqera.io"
        username: ${{ secrets.SEQERA_CR_USERNAME }}
        password: ${{ secrets.SEQERA_CR_PASSWORD }}

    - name: Build mimalloc image
      run: make build-mimalloc

